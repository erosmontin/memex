AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Media Visualization App with S3 and DynamoDB

Resources:
  # S3 Bucket for Media Storage
  MediaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub my-media-bucket-${AWS::AccountId}-${AWS::Region}
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: ['GET', 'PUT']
            AllowedOrigins: ['http://localhost:3000', 'https://yourdomain.com'] # Update for production
            MaxAge: 3000

  # DynamoDB Table for Media Metadata
  MediaTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MediaTable
      AttributeDefinitions:
        - AttributeName: fileKey
          AttributeType: S
      KeySchema:
        - AttributeName: fileKey
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # IAM Role for Next.js API to Access S3 and DynamoDB
  MediaAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com # For SAM, but we'll use this in Next.js
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MediaAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub arn:aws:s3:::${MediaBucket}/*
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:PutItem
                Resource: !GetAtt MediaTable.Arn
              - Effect: Allow
                Action:
                  - cognito-idp:GetUser
                Resource: '*' # Scope to your User Pool ARN in production

Outputs:
  MediaBucketName:
    Description: Name of the S3 bucket
    Value: !Ref MediaBucket
  MediaTableName:
    Description: Name of the DynamoDB table
    Value: !Ref MediaTable
  MediaAccessRoleArn:
    Description: ARN of the IAM role
    Value: !GetAtt MediaAccessRole.Arn
