AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Media Visualization App with S3-triggered image preview

Parameters:
  # Parameter for the S3 Bucket Name
  MediaBucketName:
    Type: String
    Default: my-media-bucket-515966532699-us-east-1 #!Sub my-media-bucket-${AWS::AccountId}-${AWS::Region}
    Description: The name of the S3 bucket to store media files
Resources:
  # S3 Bucket for Media Storage
  MediaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref MediaBucketName
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - HEAD
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
  # DynamoDB Table for Media Metadata (if still needed for other reasons)
  MediaTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MediaTable
      AttributeDefinitions:
        - AttributeName: fileKey
          AttributeType: S
      KeySchema:
        - AttributeName: fileKey
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE


  MediaPreviewFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 60
      MemorySize: 1024
      CodeUri: media-preview
      Handler: index.handler
      Runtime: nodejs18.x
      Policies: 
        - S3CrudPolicy:
            BucketName: !Ref MediaBucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref MediaTable
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref MediaBucketName
          PREVIEW_FOLDER: previews
          DYNAMODB_TABLE_NAME: !Ref MediaTable
      Events:
        S3ResultsEvent:
          Type: S3
          Properties:
            Bucket: !Ref MediaBucket
            Events: s3:ObjectCreated:*

Outputs:
  MediaBucketName:
    Value: !Ref MediaBucket
  MediaTableName:
    Value: !Ref MediaTable